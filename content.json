{"meta":{"title":"从0.1开始学Android","subtitle":"zyf的Android学习笔记","description":"Android Tutorial","author":"Winfrid Zhao","url":"http://zyfAndroid.com"},"pages":[],"posts":[{"title":"Android第二课——构建简单的应用","slug":"Android第二课——构建简单的应用","date":"2018-08-12T05:16:22.000Z","updated":"2018-08-12T05:18:38.234Z","comments":true,"path":"2018/08/12/Android第二课——构建简单的应用/","link":"","permalink":"http://zyfAndroid.com/2018/08/12/Android第二课——构建简单的应用/","excerpt":"","text":"编写应用一个最简单的app主代码12345678public class HelloWorldActivity extends AppCompatActivity &#123; @Override protected void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); setContentView(R.layout.hello_world_layout); //R类是自动生成的，包含所有res目录下资源的id &#125;&#125; AppCompatActivity是一种向下兼容的Activity,是Activity的子类。Activity是Android系统提供的一个活动基类，所有活动必须继承它或它的子类才拥有活动的特性。 onCreate()方法是创建活动时必定会执行的方法。 setContentView()方法为当前活动引入布局。Android程序的设计讲究逻辑与视图分离，因此常在布局文件中编写界面，然后在活动中引入。 使用finish()方法销毁活动。 layout文件123456789101112131415161718192021222324&lt;RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\" android:id=\"@+id/hello_world_layout\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:paddingBottom=\"@dimen/activity_vertical_margin\" android:paddingLeft=\"@dimen/activity_horizontal_margin\" android:paddingRight=\"@dimen/activity_horizontal_margin\" android:paddingTop=\"@dimen/activity_vertical_margin\" tools:context=\"com.example.helloworld.HelloWorldActivity\"&gt; &lt;Button android:id=\"@+id/button_1\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:text=\"Button 1\" /&gt;&lt;!--引用id用@id/name语法，定义id用@+id/name语法-&gt;&lt;!--TextView为文本--&gt; &lt;TextView android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:text=\"Hello World!\" /&gt; &lt;/RelativeLayout&gt; 资源——字符串123&lt;resources&gt; &lt;string name=\"app_name\"&gt;HelloWorld&lt;/string&gt; &lt;/resources&gt; 引用资源的方式 代码中：通过R.string.app_name引用该字符串。 XML中：通过@string/app_name引用该字符串。\\其中string部分可替换成需要引用的资源类型，如layout,drawable等。例见AndroidManifest.xml文件。","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://zyfAndroid.com/tags/Android/"},{"name":"第二课","slug":"第二课","permalink":"http://zyfAndroid.com/tags/第二课/"},{"name":"资源","slug":"资源","permalink":"http://zyfAndroid.com/tags/资源/"}]},{"title":"Android第一课——初识Android","slug":"undefined-2018-08-12","date":"2018-08-12T04:24:28.000Z","updated":"2018-08-12T04:31:22.678Z","comments":true,"path":"2018/08/12/undefined-2018-08-12/","link":"","permalink":"http://zyfAndroid.com/2018/08/12/undefined-2018-08-12/","excerpt":"","text":"Android四大组件Activity活动 包含应用所有看得见的东西Service服务 无法看到，在后台运行，退出应用仍可继续运行Broadcast Receiver广播接收器 允许应用接收来自各处的消息，如电话、短信等。应用也可发出自己的广播消息。Content Provider内容提供器 程序间共享数据的方法 Android工程的结构 AndroidManifest.xml12345678910111213141516171819202122&lt;!--注意application标签要写在所有其他标签之后--&gt;&lt;activity android:name=\".HelloWorldActivity\" android:label=\"Title\"&gt;&lt;!--程序包名可省略--&gt; &lt;intent-filter&gt; &lt;!--在intent-fliter中指示该应用可以处理的intent类型--&gt; &lt;action android:name=\"android.intent.action.MAIN\" /&gt; &lt;category android:name=\"android.intent.category.LAUNCHER\" /&gt; &lt;!--action和category两行表示该活动为主活动--&gt; &lt;!--可选用data标签指定当前活动能响应的数据类型--&gt; &lt;/intent-filter&gt;&lt;/activity&gt;&lt;application android:allowBackup=\"true\" android:icon=\"@mipmap/ic_launcher\" android:label=\"@string/app_name\" android:supportsRtl=\"true\" android:theme=\"@style/AppTheme\"&gt; ... &lt;/application&gt; build.gradle~\\build.gradle12345678910111213buildscript &#123; repositories &#123; jcenter()//jcenter是一个代码托管仓库，有这一行就可以引用上面的开源项目 &#125; dependencies &#123; classpath 'com.android.tools.build: gradle:2.2.0' &#125; &#125; allprojects &#123; repositories &#123; jcenter() &#125; &#125; ~\\app\\src\\build.gradle1234567891011121314151617181920212223242526272829303132apply plugin:'com.android.application' //表示这是应用程序模块//com.android.library表示库模块android &#123;//android闭包 compileSdkVersion 24 buildToolsVersion \"24.0.2\" defaultConfig &#123; applicationId \"com.example.helloworld\" //包名 minSdkVersion 15 //最低兼容版本 targetSdkVersion 24 //做过充分测试的版本 versionCode 1//版本号 versionName \"1.0\"//版本名 &#125; buildTypes &#123; release &#123; minifyEnabled false//是否对项目代码混淆 proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' &#125; &#125; &#125; dependencies &#123; compile fileTree(dir:'libs', include:['*.jar']) //本地依赖声明 compile 'com.android.support:appcompat-v7:24.2.1' //远程依赖库 //com~support是域名 //app~v7是组名 //24.2.1是版本号 //库依赖：compile project(':libraryxxx') testCompile 'junit:junit:4.12'//测试用例库&#125;","categories":[],"tags":[{"name":"Android","slug":"Android","permalink":"http://zyfAndroid.com/tags/Android/"},{"name":"工程","slug":"工程","permalink":"http://zyfAndroid.com/tags/工程/"},{"name":"结构","slug":"结构","permalink":"http://zyfAndroid.com/tags/结构/"},{"name":"第一课","slug":"第一课","permalink":"http://zyfAndroid.com/tags/第一课/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-08-12T02:24:45.393Z","updated":"2018-08-12T02:24:45.394Z","comments":true,"path":"2018/08/12/hello-world/","link":"","permalink":"http://zyfAndroid.com/2018/08/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}